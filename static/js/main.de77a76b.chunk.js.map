{"version":3,"sources":["components/Guildview/GuildTable.js","components/Guildview/Guildview.js","components/Gearview/GearTable.js","components/Gearview/Gearview.js","components/Icons/Lightbulb.js","components/Sidebar/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["prepareData","props","result","index","guildMembers","forEach","member","entry","id","player_id","name","className","playable_class","level","race","playable_race","rank","covenant_level","renown_level","dungeon_rio","mythic_rio","covenant_name","covenant","collectable_av","achievement_points","push","href","gear","i","char_id","eq_gs","gs","legy_spell","eq_legy","legy_level","primary","enchantments","enchant","slot","style","color","eq_sockets","socket_curr","socket_total","length","dungeon","dungeon_currently","best","dungeon_best_mythic","total","mount","collectable_mounts","usable","GuildTable","useState","React","useMemo","JSON","parse","localStorage","getItem","data","setData","new_data","Object","keys","columns","Header","accessor","width","useTable","initialState","sortBy","desc","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","Table","striped","bordered","hover","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","Guildview","state","error","isLoaded","guild","fetch","then","res","json","setState","content","this","message","Row","Col","Component","GearTable","members","gear_score","items","type","rarity","quality","item_id","label","Gearview","LightbulbOn","aria-hidden","focusable","role","xmlns","viewBox","fill","d","LightbulbOff","Sidebar","lightbulb","to","data-prefix","data-icon","onClick","event","onClickRefresh","activateTheme","document","documentElement","variables","getComputedStyle","body","theme","setProperty","getPropertyValue","App","change","setChange","useEffect","title","basename","process","path","setItem","old","window","confirm","location","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de77a76b.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction class_id_to_name(class_id) {\r\n  let classes = ['warrior', 'paladin', 'hunter', 'rogue', 'prist', 'death-knight', 'shamane', 'mage', 'warlock', 'monk', 'druid', 'demon-hunter']\r\n  return classes[--class_id];\r\n}\r\n\r\nfunction prepareData(props) {\r\n  let result = [];\r\n  let index = 0\r\n\r\n  props.guildMembers.forEach(member => {\r\n    let entry = {\r\n      id: member.player_id,\r\n      index: index,\r\n      name: <span className={member.playable_class}>{member.name}</span>,\r\n      level: member.level,\r\n      race: member.playable_race,\r\n      rank: member.rank,\r\n      covenant_level: member.renown_level,\r\n      dungeon_rio: member.mythic_rio,\r\n      covenant_name: member.covenant,\r\n      collectable_av: member.achievement_points,\r\n    };\r\n    index++;\r\n    result.push(entry);\r\n  });\r\n\r\n  let href = '';\r\n  props.gear.forEach(gear => {\r\n    for (let i = 0; i < result.length; i++) {\r\n      if (result[i].id === gear.char_id) {\r\n        result[i].eq_gs = gear.gs;\r\n\r\n        if ('legy_level' in gear) {\r\n          href = \"https://de.wowhead.com/spell=\" + gear.legy_spell;\r\n          result[i].eq_legy = <a href={href} className='q5'>{gear.legy_level}</a>\r\n        }\r\n\r\n        let primary = false;\r\n        gear.enchantments.forEach(enchant => {\r\n          if ('ench_' + enchant.slot in result[i] && primary) {\r\n            return;\r\n          }\r\n          if (enchant.enchant === null) {\r\n            result[i]['ench_' + enchant.slot] = <a style={{ color: \"red\" }}>Nein</a>\r\n          } else {\r\n            if (enchant.slot === 'PRIMARY') {\r\n              primary = true;\r\n            }\r\n            result[i]['ench_' + enchant.slot] = <a style={{ color: \"green\" }}>Ja</a>\r\n          }\r\n        });\r\n\r\n        result[i].eq_sockets = gear.socket_curr + '/' + gear.socket_total;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n\r\n  props.dungeon.forEach(dungeon => {\r\n    for (let i = 0; i < result.length; i++) {\r\n      if (result[i].id === dungeon.char_id) {\r\n        result[i].dungeon_currently = dungeon.best;\r\n        result[i].dungeon_best_mythic = dungeon.total;\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  props.mount.forEach(mount => {\r\n    for (let i = 0; i < result.length; i++) {\r\n      if (result[i].id === mount.char_id) {\r\n        result[i].collectable_mounts = mount.usable + '/' + mount.total;\r\n      }\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst GuildTable = (props) => {\r\n  const [data, setData] = useState(\r\n    React.useMemo(() => JSON.parse(localStorage.getItem(\"GuildTable\")) || prepareData(props), [])\r\n  );\r\n\r\n  let new_data = prepareData(props);\r\n  if (Object.keys(data[0]).length < Object.keys(new_data[0]).length) {\r\n    setData(new_data);\r\n  }\r\n\r\n  const columns = React.useMemo(\r\n    () => [{\r\n      Header: \"Spieler\",\r\n      columns: [\r\n        {\r\n          Header: \"Name\",\r\n          accessor: \"name\",\r\n          width: 50\r\n        },\r\n        {\r\n          Header: \"Level\",\r\n          accessor: \"level\",\r\n          width: 30\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      Header: \"Equipment\",\r\n      columns: [\r\n        {\r\n          Header: \"GS\",\r\n          accessor: \"eq_gs\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Legy\",\r\n          accessor: \"eq_legy\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Sockel\",\r\n          accessor: \"eq_sockets\",\r\n          width: 30\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      Header: \"Enchants\",\r\n      columns: [\r\n        {\r\n          Header: \"Main\",\r\n          accessor: \"ench_MAIN_HAND\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Off\",\r\n          accessor: \"ench_OFF_HAND\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Umhang\",\r\n          accessor: \"ench_BACK\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Brust\",\r\n          accessor: \"ench_CHEST\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Primär\",\r\n          accessor: \"ench_PRIMARY\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Ring1\",\r\n          accessor: \"ench_FINGER_1\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Ring2\",\r\n          accessor: \"ench_FINGER_2\",\r\n          width: 30\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      Header: \"Höchsten Mythic +\",\r\n      columns: [\r\n        {\r\n          Header: \"Total\",\r\n          accessor: \"dungeon_best_mythic\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Weekly\",\r\n          accessor: \"dungeon_currently\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"RIO\",\r\n          accessor: \"dungeon_rio\",\r\n          width: 30\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      Header: \"Paktsanktum\",\r\n      columns: [\r\n        {\r\n          Header: \"Name\",\r\n          accessor: \"covenant_name\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Level\",\r\n          accessor: \"covenant_level\",\r\n          width: 30\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      Header: \"Aktueller Raid Fortschritt\",\r\n      columns: [\r\n        {\r\n          Header: \"Fortschritt\",\r\n          accessor: \"raid_progress\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Clears\",\r\n          accessor: \"raid_clears\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Kills\",\r\n          accessor: \"raid_kills\",\r\n          width: 30\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      Header: \"Sammelbares\",\r\n      columns: [\r\n        {\r\n          Header: \"Erfolge\",\r\n          accessor: \"collectable_av\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Titel\",\r\n          accessor: \"collectable_title\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Mounts\",\r\n          accessor: \"collectable_mounts\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Pets\",\r\n          accessor: \"collectable_pets\",\r\n          width: 30\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      Header: \"Spieler gegen Spieler\",\r\n      columns: [\r\n        {\r\n          Header: \"Ehre Stufe\",\r\n          accessor: \"pvp_honor\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Wertung (2v2)\",\r\n          accessor: \"pvp_rating_2v2\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Wertung (3v3)\",\r\n          accessor: \"pvp_rating_3v3\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Arenas (2v2)\",\r\n          accessor: \"pvp_games_2v2\",\r\n          width: 30\r\n        },\r\n        {\r\n          Header: \"Arenas (3v3)\",\r\n          accessor: \"pvp_games_3v3\",\r\n          width: 30\r\n        },\r\n      ]\r\n    },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: {\r\n        sortBy: [\r\n          {\r\n            id: 'level',\r\n            desc: true\r\n          },\r\n          {\r\n            id: 'eq_gs',\r\n            desc: true\r\n          },\r\n        ]\r\n      }\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className=\"sorted-header\"\r\n                >\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" 🔽\"\r\n                        : \" 🔼\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr\r\n                {...row.getRowProps()}\r\n              >\r\n                {row.cells.map((cell, i) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()} id=\"table-cell\">{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GuildTable;","import React, { useState, useRef } from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n\r\nimport { mock_gear, mock_guild } from './Mockdata.js'\r\n\r\nimport GuildTable from './GuildTable.js'\r\n\r\nclass Guildview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      guild: [],\r\n      gear: [],\r\n      dungeon: [],\r\n      mount: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://b7ab414a-ca5b-41a8-ba5a-adc219611e67.ka.bw-cloud-instance.org/guild/blackrock/shockwave/roster\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            guild: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n    // Just as an example, we try to see if this actually works as i intended, later outsource to own method\r\n    fetch(\"https://b7ab414a-ca5b-41a8-ba5a-adc219611e67.ka.bw-cloud-instance.org/guild/blackrock/shockwave/gear/overview\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            gear: result\r\n          });\r\n        }\r\n      );\r\n    fetch(\"https://b7ab414a-ca5b-41a8-ba5a-adc219611e67.ka.bw-cloud-instance.org/guild/blackrock/shockwave/dungeons/overview\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            dungeon: result\r\n          });\r\n        }\r\n      );\r\n    fetch(\"https://b7ab414a-ca5b-41a8-ba5a-adc219611e67.ka.bw-cloud-instance.org/guild/blackrock/shockwave/collection/mounts/overview\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            mount: result\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, guild, gear, dungeon, mount } = this.state;\r\n\r\n    let content;\r\n    if (error) {\r\n      content = <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      content = <div>Loading...</div>;\r\n    } else {\r\n      content = <GuildTable guildMembers={guild} gear={gear} dungeon={dungeon} mount={mount} />;\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <h2>Schmockwave</h2>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col>\r\n            {content}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Guildview;","import React, { useState, useRef } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction resolve_rarity(type) {\r\n  if (type === 'UNCOMMON') {\r\n    return 'q2';\r\n  } else if (type === 'RARE') {\r\n    return 'q3';\r\n  } else if (type === 'EPIC') {\r\n    return 'q4';\r\n  } else if (type === 'LEGENDARY') {\r\n    return 'q5';\r\n  }\r\n}\r\n\r\nfunction prepareData(members) {\r\n  let result = [];\r\n  let index = 0\r\n\r\n  members.forEach(member => {\r\n    let entry = {\r\n      index: index,\r\n      name: <span>{member.name}</span>,\r\n      gs: member.gear_score\r\n    };\r\n\r\n    member.items.forEach(gear => {\r\n      let rarity = resolve_rarity(gear.quality)\r\n      let href = \"https://de.wowhead.com/item=\" + gear.item_id + '&ilvl=' + gear.level;\r\n      if (gear.legy_spell != null) {\r\n        href = \"https://de.wowhead.com/spell=\" + gear.legy_spell;\r\n      }\r\n      let label = \"(\" + gear.level + \") \" + gear.name;\r\n      entry[gear.slot] = <a href={href} className={rarity}>{label}</a>\r\n    });\r\n\r\n    index++;\r\n    result.push(entry);\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n\r\nconst GearTable = (props) => {\r\n  const [data, setData] = useState(\r\n    React.useMemo(() => JSON.parse(localStorage.getItem(\"GearTable\")) || prepareData(props.data), [])\r\n  );\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"GS\",\r\n        accessor: \"gs\",\r\n      },\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"Waffe\",\r\n        accessor: \"MAIN_HAND\",\r\n      },\r\n      {\r\n        Header: \"Schildhand\",\r\n        accessor: \"OFF_HAND\",\r\n      },\r\n      {\r\n        Header: \"Kopf\",\r\n        accessor: \"HEAD\",\r\n      },\r\n      {\r\n        Header: \"Halskette\",\r\n        accessor: \"NECK\",\r\n      },\r\n      {\r\n        Header: \"Schultern\",\r\n        accessor: \"SHOULDER\",\r\n      },\r\n      {\r\n        Header: \"Rücken\",\r\n        accessor: \"BACK\",\r\n      },\r\n      {\r\n        Header: \"Brust\",\r\n        accessor: \"CHEST\",\r\n      },\r\n      {\r\n        Header: \"Handgelenke\",\r\n        accessor: \"WRIST\",\r\n      },\r\n      {\r\n        Header: \"Hände\",\r\n        accessor: \"HANDS\",\r\n      },\r\n      {\r\n        Header: \"Taile\",\r\n        accessor: \"WAIST\",\r\n      },\r\n      {\r\n        Header: \"Hosen\",\r\n        accessor: \"LEGS\",\r\n      },\r\n      {\r\n        Header: \"Schuhe\",\r\n        accessor: \"FEET\",\r\n      },\r\n      {\r\n        Header: \"Ring\",\r\n        accessor: \"FINGER_1\",\r\n      },\r\n      {\r\n        Header: \"Ring\",\r\n        accessor: \"FINGER_2\",\r\n      },\r\n      {\r\n        Header: \"Trinket\",\r\n        accessor: \"TRINKET_1\",\r\n      },\r\n      {\r\n        Header: \"Trinket\",\r\n        accessor: \"TRINKET_2\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: {\r\n        sortBy: [\r\n          {\r\n            id: 'rank',\r\n            desc: false\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className=\"sorted-header\"\r\n                >\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" 🔽\"\r\n                        : \" 🔼\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr\r\n                {...row.getRowProps()}\r\n              >\r\n                {row.cells.map((cell, i) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()} id=\"table-cell\">{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GearTable;","import React, { useState, useRef } from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n\r\nimport { mock_gear, mock_guild } from '../Guildview/Mockdata.js'\r\n\r\nimport GearTable from './GearTable.js'\r\n\r\nclass Gearview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://b7ab414a-ca5b-41a8-ba5a-adc219611e67.ka.bw-cloud-instance.org/guild/blackrock/shockwave/gear\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    let content;\r\n    if (error) {\r\n      content = <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      content = <div>Loading...</div>;\r\n    } else {\r\n      content = <GearTable data={items} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <h2>Schmockwave</h2>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col>\r\n            {content}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Gearview;","import React from \"react\";\r\n\r\nfunction LightbulbOn(props) {\r\n  return (\r\n    <div>\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        focusable=\"false\"\r\n        role=\"img\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 640 512\"\r\n        className=\"lightbulb\"\r\n      >\r\n        <g className=\"fa-group\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M319.45 0C217.44.31 144 83 144 176a175 175 0 0 0 43.56 115.78c16.52 18.85 42.36 58.23 52.21 91.45 0 .26.07.52.11.78h160.24c0-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45A175.9 175.9 0 0 0 319.45 0zm.55 96a80.09 80.09 0 0 0-80 80 16 16 0 0 1-32 0A112.12 112.12 0 0 1 320 64a16 16 0 0 1 0 32z\"\r\n            className=\"fa-secondary\"\r\n          ></path>\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M112.81 160H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h101.78a209.51 209.51 0 0 1-4.97-64zM40.73 67.71l80.88 46.69a203.27 203.27 0 0 1 28.12-57.66l-77-44.46a16 16 0 0 0-21.86 5.86l-16 27.71a16 16 0 0 0 5.86 21.86zm91 196l-91 52.55a16 16 0 0 0-5.86 21.86l16 27.71a16 16 0 0 0 21.86 5.86l94.42-54.51c-.88-1.06-1.83-2.27-2.64-3.18a207.68 207.68 0 0 1-32.76-50.26zm467.52 52.55l-91.49-52.82c-8.24 17.65-18.23 34.52-31.28 49.4-1.1 1.26-2.36 2.85-3.59 4.37l94.36 54.48a16 16 0 0 0 21.86-5.86l16-27.71a16 16 0 0 0-5.84-21.83zm0-248.58a16 16 0 0 0 5.86-21.86l-16-27.71a16 16 0 0 0-21.86-5.86l-77.08 44.5a207.31 207.31 0 0 1 28.46 57.47zM240.06 454.35a32 32 0 0 0 5.36 17.65l17.09 25.69A32 32 0 0 0 289.15 512h61.71a32 32 0 0 0 26.64-14.28L394.59 472a32 32 0 0 0 5.41-17.65V416H240zM624 160h-96.81c1.12 14.55 2.18 31.7-5.53 64H624a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"\r\n            className=\"fa-primary\"\r\n          ></path>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LightbulbOff(props) {\r\n  return (\r\n    <div>\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        focusable=\"false\"\r\n        role=\"img\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 640 512\"\r\n        className=\"lightbulb\"\r\n      >\r\n        <g className=\"fa-group\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M175.45 0C73.44.31 0 83 0 176a175 175 0 0 0 43.56 115.78c16.52 18.85 42.36 58.22 52.21 91.45 0 .26.07.52.11.78h160.24c0-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45A175.9 175.9 0 0 0 175.45 0zm.55 96a80.09 80.09 0 0 0-80 80 16 16 0 0 1-32 0A112.12 112.12 0 0 1 176 64a16 16 0 0 1 0 32z\"\r\n            className=\"fa-secondary\"\r\n          ></path>\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M96.06 454.35L96 416h160v38.35a32 32 0 0 1-5.41 17.65l-17.09 25.73A32 32 0 0 1 206.86 512h-61.71a32 32 0 0 1-26.64-14.28L101.42 472a32 32 0 0 1-5.36-17.65z\"\r\n            className=\"fa-primary\"\r\n          ></path>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { LightbulbOn, LightbulbOff };","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { LightbulbOff, LightbulbOn } from \"../Icons/Lightbulb.js\"\r\n\r\n/**\r\n * Sidebar, with an icon for each subpage in this app. \r\n * Each icon has its own link. The Sidebar can have items from top to bottom and icons from bottom to top.\r\n */\r\nexport default function Sidebar(props) {\r\n  let lightbulb;\r\n  if (localStorage.getItem(\"theme\") === \"hell\") {\r\n    lightbulb = <LightbulbOff />;\r\n  } else {\r\n    lightbulb = <LightbulbOn />;\r\n  }\r\n\r\n  return (\r\n    <nav className=\"sidebar\">\r\n      <ul className=\"sidebar-nav\">\r\n        <li className=\"logo\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            <span className=\"link-text logo-text\">Übersicht</span>\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fad\"\r\n              data-icon=\"angle-double-right\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 448 512\"\r\n              className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\r\n            >\r\n              <g className=\"fa-group\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\r\n                  className=\"fa-secondary\"\r\n                ></path>\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\r\n                  className=\"fa-primary\"\r\n                ></path>\r\n              </g>\r\n            </svg>\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/gearview\" className=\"nav-link\">\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fad\"\r\n              data-icon=\"cat\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n              className=\"svg-inline--fa fa-cat fa-w-16 fa-9x\"\r\n            >\r\n              <g className=\"fa-group\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M512 400v32a16 16 0 0 1-16 16H32a32 32 0 0 1-32-32V80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v304h432a16 16 0 0 1 16 16z\"\r\n                  className=\"fa-secondary\"\r\n                ></path>\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M464 320H346c-21.38 0-32.09-25.85-17-41l32.4-32.4-73.4-73.35-73.37 73.38a32 32 0 0 1-45.25 0l-68.69-68.69a16 16 0 0 1 0-22.63l22.62-22.62a16 16 0 0 1 22.63 0L192 178.75l73.38-73.38a32 32 0 0 1 45.25 0l96 96L439 169c15.12-15.12 41-4.41 41 17v118a16 16 0 0 1-16 16z\"\r\n                  className=\"fa-primary\"\r\n                ></path>\r\n              </g>\r\n            </svg>\r\n            <span className=\"link-text\">Gear</span>\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\" onClick={(event) => props.onClickRefresh(event)}>\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fad\"\r\n              data-icon=\"space-shuttle\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n              className=\"svg-inline--fa fa-space-shuttle fa-w-20 fa-5x\"\r\n            >\r\n              <g className=\"fa-group\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M8 454.06V320a24 24 0 0 1 24-24h134.06c21.38 0 32.09 25.85 17 41l-41.75 41.75A166.82 166.82 0 0 0 256.16 424c77.41-.07 144.31-53.14 162.78-126.85a12 12 0 0 1 11.65-9.15h57.31a12 12 0 0 1 11.81 14.18C478.07 417.08 377.19 504 256 504a247.14 247.14 0 0 1-171.31-68.69L49 471c-15.15 15.15-41 4.44-41-16.94z\"\r\n                  className=\"fa-secondary\"\r\n                ></path>\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M12.3 209.82C33.93 94.92 134.81 8 256 8a247.14 247.14 0 0 1 171.31 68.69L463 41c15.12-15.12 41-4.41 41 17v134a24 24 0 0 1-24 24H345.94c-21.38 0-32.09-25.85-17-41l41.75-41.75A166.8 166.8 0 0 0 255.85 88c-77.46.07-144.33 53.18-162.79 126.85A12 12 0 0 1 81.41 224H24.1a12 12 0 0 1-11.8-14.18z\"\r\n                  className=\"fa-primary\"\r\n                ></path>\r\n              </g>\r\n            </svg>\r\n            <span className=\"link-text\">Aktualisieren</span>\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\" onClick={(event) => props.onClick(event)}>\r\n          <div className=\"nav-link\">\r\n            {lightbulb}\r\n            <span className=\"link-text\">Farbschema</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n","import React, { useEffect, useState } from \"react\";\nimport './App.css';\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Guildview from \"./components/Guildview/Guildview.js\";\nimport Gearview from \"./components/Gearview/Gearview.js\";\nimport Sidebar from \"./components/Sidebar/Sidebar.js\";\n\nfunction activateTheme() {\n  let style = document.documentElement.style;\n  let variables = getComputedStyle(document.body);\n  let theme = localStorage.getItem(\"theme\");\n\n  style.setProperty(\n    \"--theme-bg\",\n    variables.getPropertyValue(\"--theme-\" + theme + \"-bg\")\n  );\n  style.setProperty(\n    \"--theme-color\",\n    variables.getPropertyValue(\"--theme-\" + theme + \"-color\")\n  );\n}\n\n\nfunction App() {\n  const [change, setChange] = useState(0);  //Just to force a rerender of the page after changing the theme\n\n  useEffect(() => {\n    document.title = \"WoW Summary\";\n  }, []);\n\n  activateTheme();\n\n  function changeTheme(event) {\n    if (localStorage.getItem(\"theme\") === \"hell\") {\n      localStorage.setItem(\"theme\", \"dunkel\");\n    } else {\n      localStorage.setItem(\"theme\", \"hell\");\n    }\n\n    activateTheme();\n    let old = change;\n    setChange(++old);\n  }\n\n  function onClickRefresh(event) {\n    if (window.confirm(\"Aktualisieren der Daten, dieser Vorgang dauert länger!!!\")) {\n      fetch(\"https://b7ab414a-ca5b-41a8-ba5a-adc219611e67.ka.bw-cloud-instance.org/refresh\")\n        .then(\n          window.location.href = \"/WoWSummary/#/WoWSummary/\"\n        )\n    }\n  }\n\n  return (\n\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <main>\n          <Switch>\n            <Route path=\"/gearview\">\n              <Gearview />\n            </Route>\n            <Route path=\"/buy\">\n              <Gearview />\n            </Route>\n            <Route path=\"/analysis\">\n              <Guildview />\n            </Route>\n            <Route path=\"/calculator\">\n              <Guildview />\n            </Route>\n            <Route path=\"/\">\n              <Guildview />\n            </Route>\n            <Route path=\"*\">404</Route>\n          </Switch>\n        </main>\n        <Sidebar onClick={changeTheme} key={change} onClickRefresh={onClickRefresh} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}